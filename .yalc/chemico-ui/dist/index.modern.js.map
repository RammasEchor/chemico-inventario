{"version":3,"file":"index.modern.js","sources":["../src/components/button.tsx","../src/components/cellButton.tsx","../src/components/errorScreen.tsx","../src/components/fileForm.tsx","../src/components/ghostButton.tsx","../src/components/loadingBar.tsx","../src/components/productCard.tsx","../src/components/productsBill.tsx","../src/components/selectInput.tsx","../src/components/textInput.tsx"],"sourcesContent":["import * as React from 'react';\nimport { ComponentPropsWithoutRef } from 'react';\n\ninterface ButtonProps extends ComponentPropsWithoutRef<\"button\"> {\n  isLoading?: boolean\n}\n\nfunction Button(props: ButtonProps) {\n  let customClassName = \"button is-info is-large is-outlined \" + props.className;\n  const { isLoading, className, ...buttonProps } = props\n  if (isLoading) {\n    customClassName = customClassName + \" is-loading\";\n  }\n\n  return (\n    <button\n      className={customClassName}\n      {...buttonProps}\n    >\n      {props.children}\n    </button>\n  );\n}\n\nexport { Button };\n","import * as React from 'react';\nimport { ComponentPropsWithoutRef } from 'react';\n\ninterface ButtonProps extends ComponentPropsWithoutRef<\"button\"> {\n    isLoading?: boolean\n}\n\nfunction CellButton(props: ButtonProps) {\n    let customClassName = props.className;\n    const { isLoading, className, ...buttonProps } = props\n    if (isLoading) {\n        customClassName = customClassName + \" is-loading\";\n    }\n\n    return (\n        <button className={customClassName} {...buttonProps}>{props.children}</button>\n    );\n}\n\nexport { CellButton };\n","import * as React from 'react';\nimport { PropsWithChildren } from 'react';\n\nfunction ErrorScreen(props: PropsWithChildren<unknown>) {\n    return (\n        <React.Fragment>{props.children}</React.Fragment>\n    );\n}\n\nexport { ErrorScreen };\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { FaUpload } from \"react-icons/fa\";\n\ninterface FileFormInterface {\n    onChange: ({ file, filename }: { file: File, filename: string }) => void\n}\n\nfunction FileForm(props: FileFormInterface) {\n    const [filename, setFilename] = useState(\"Ningún archivo seleccionado\");\n\n    return (\n        <div className={`\n                file \n                is-boxed \n                is-centered \n                inv-file-responsive \n                has-name\n                is-large\n            `}>\n            <label className=\"file-label\">\n                <input className=\"file-input\" type=\"file\" name=\"resume\"\n                    onChange={(event) => {\n                        const files = event.currentTarget.files as FileList\n                        props.onChange({\n                            file: files[0],\n                            filename: files[0].name\n                        });\n                        setFilename(files[0].name);\n                    }} />\n                <span className=\"file-cta\">\n                    <span className=\"file-icon\">\n                        <i className=\"fas fa-upload\">\n                            <FaUpload />\n                        </i>\n                    </span>\n                    <span className=\"file-label\">\n                        Seleccionar archivo…\n                    </span>\n                </span>\n                <span className=\"file-name\">\n                    {filename}\n                </span>\n            </label>\n        </div>\n    );\n}\n\nexport { FileForm };\n","import * as React from 'react';\nimport { ComponentPropsWithoutRef } from \"react\";\n\nfunction GhostButton({ className, style, children, ...rest }: ComponentPropsWithoutRef<'button'>) {\n    return (\n        <button\n            className='button is-ghost'\n            style={{ whiteSpace: \"normal\", textAlign: \"start\", wordBreak: \"break-word\", wordWrap: \"break-word\" }}\n            {...rest}\n        >\n            {children}\n        </button>\n    )\n}\n\nexport { GhostButton };\n","import * as React from 'react';\n\nfunction LoadingBar() {\n    return (\n        <div className=\"columns is-centered is-mobile\">\n            <div className=\"column is-four-fifths\">\n                <progress className=\"progress is-small is-info\" max=\"100\">60%</progress>\n            </div>\n        </div>\n    );\n}\n\nexport { LoadingBar };\n","import * as React from 'react'\nimport Product from '../models/product'\n\ninterface ProductCardInterface {\n  img: string\n  descripcion: string\n  precio: string\n  uni_medida: string\n  noParte: string\n  idProd: string\n  currency: string\n  stock?: string\n  idOdc: string\n  prodsSolicitar: Product[]\n  setProdsSolicitar: React.Dispatch<React.SetStateAction<Product[]>>\n  onClickAgregar?: (id: string) => boolean\n}\n\nfunction ProductCard(p: ProductCardInterface) {\n  return (\n    <div className='card box' style={{ width: 300 }}>\n      <div className='card-image columns is-vcentered is-centered mt-2'>\n        <img\n          src={p.img}\n          alt='Placeholder'\n          style={{ objectFit: 'contain', width: 250, height: 200 }}\n        />\n      </div>\n      <div className='card-content'>\n        <div className='content'>\n          <h6\n            className='title is-6'\n            style={{\n              height: 50,\n              overflow: 'hidden',\n              whiteSpace: 'normal',\n              textOverflow: 'ellipsis',\n              wordBreak: 'break-word',\n              wordWrap: 'break-word'\n            }}\n          >\n            {p.descripcion}\n          </h6>\n          <div className='subtitle is-6'>\n            <div>\n              {p.precio !== '' ? `${p.precio} ${p.currency}` : ''}\n              {}\n            </div>\n            <div>{p.uni_medida}</div>\n          </div>\n          <div className='subtitle is-6 is-italic'>\n            {'Disponible: ' + p.stock}\n          </div>\n          <span className='tag is-info is-medium'>{p.noParte}</span>\n        </div>\n      </div>\n      <footer className='card-footer'>\n        {!p.prodsSolicitar.some((e) => e.id === p.idProd) ? (\n          <a\n            href='#!'\n            className='card-footer-item'\n            onClick={() => {\n              let addItem = true\n              if (p.onClickAgregar !== undefined) {\n                addItem = p.onClickAgregar(p.idProd)\n              }\n              if (addItem) {\n                p.setProdsSolicitar((prodsSolicitar) => {\n                  return [\n                    ...prodsSolicitar,\n                    {\n                      id: p.idProd,\n                      codigo: p.noParte,\n                      cantidad: '1',\n                      precioU: p.precio,\n                      precioT: p.precio,\n                      numPedido: '0',\n                      folio: '0',\n                      comentarios: p.descripcion,\n                      tipo_equipo: '',\n                      numEconomico: '',\n                      currency: p.currency,\n                      stock: p.stock,\n                      idOdc: p.idOdc\n                    }\n                  ]\n                })\n              }\n            }}\n          >\n            Agregar\n          </a>\n        ) : (\n          <React.Fragment>\n            <a\n              href='#!'\n              className='card-footer-item'\n              onClick={() => {\n                const index = p.prodsSolicitar.findIndex(\n                  (e) => e.id === p.idProd\n                )\n                let cant =\n                  parseInt(p.prodsSolicitar[index]?.cantidad as string) - 1\n                if (cant < 1) {\n                  p.setProdsSolicitar((prodsSolicitar) =>\n                    prodsSolicitar.filter((f) => f.id !== p.idProd)\n                  )\n                } else {\n                  p.setProdsSolicitar((prodsSolicitar) =>\n                    prodsSolicitar.map((f) => {\n                      if (f.id === p.idProd) {\n                        return {\n                          ...f,\n                          cantidad: `${cant}`,\n                          precioT: `${cant * parseFloat(f.precioU)}`\n                        }\n                      } else {\n                        return f\n                      }\n                    })\n                  )\n                }\n              }}\n            >\n              -\n            </a>\n            <input\n              className='input card-footer-item has-text-link ml-6 mt-3'\n              pattern='[0-9]*'\n              value={p.prodsSolicitar.find((e) => e.id === p.idProd)?.cantidad}\n              onChange={(e) => {\n                p.setProdsSolicitar((prodsSolicitar) =>\n                  prodsSolicitar.map((f) => {\n                    if (f.id === p.idProd) {\n                      if (\n                        parseInt(e.target.value) > parseInt(f.stock as string)\n                      )\n                        return {\n                          ...f,\n                          cantidad: `${f.stock}`,\n                          precioT: `${\n                            parseInt(f.stock as string) * parseFloat(f.precioU)\n                          }`\n                        }\n\n                      return {\n                        ...f,\n                        cantidad: `${e.target.value}`,\n                        precioT: `${\n                          parseInt(e.target.value) * parseFloat(f.precioU)\n                        }`\n                      }\n                    } else {\n                      return f\n                    }\n                  })\n                )\n              }}\n              onBlur={(e) => {\n                if (e.currentTarget.value === '') {\n                  p.setProdsSolicitar((prodsSolicitar) =>\n                    prodsSolicitar.filter((f) => f.id !== p.idProd)\n                  )\n                }\n                const value = parseInt(e.currentTarget.value)\n                if (value < 1) {\n                  p.setProdsSolicitar((prodsSolicitar) =>\n                    prodsSolicitar.filter((f) => f.id !== p.idProd)\n                  )\n                } else {\n                  p.setProdsSolicitar((prodsSolicitar) =>\n                    prodsSolicitar.map((f) => {\n                      if (f.id === p.idProd) {\n                        return {\n                          ...f,\n                          cantidad: `${value}`,\n                          precioT: `${value * parseFloat(f.precioU)}`\n                        }\n                      } else {\n                        return f\n                      }\n                    })\n                  )\n                }\n              }}\n            />\n            <a className='card-footer-item'></a>\n            <a\n              href='#!'\n              className='card-footer-item'\n              onClick={() => {\n                const index = p.prodsSolicitar.findIndex(\n                  (e) => e.id === p.idProd\n                )\n                let cant =\n                  parseInt(p.prodsSolicitar[index]?.cantidad as string) + 1\n                p.setProdsSolicitar((prodsSolicitar) =>\n                  prodsSolicitar.map((f) => {\n                    if (f.id === p.idProd) {\n                      if (cant > parseInt(f.stock as string))\n                        return {\n                          ...f,\n                          cantidad: `${f.stock}`,\n                          precioT: `${\n                            parseInt(f.stock as string) * parseFloat(f.precioU)\n                          }`\n                        }\n\n                      return {\n                        ...f,\n                        cantidad: `${cant}`,\n                        precioT: `${cant * parseFloat(f.precioU)}`\n                      }\n                    } else {\n                      return f\n                    }\n                  })\n                )\n              }}\n            >\n              +\n            </a>\n          </React.Fragment>\n        )}\n      </footer>\n    </div>\n  )\n}\n\nexport { ProductCard }\n","import * as React from 'react';\nimport Product from '../models/product';\n\ninterface ProductsBillInterface {\n    prodsSolicitar: Product[]\n}\n\nfunction ProductsBill(props: ProductsBillInterface) {\n    console.log(props.prodsSolicitar);\n    const usdList: Product[] = [];\n    const mxnList: Product[] = [];\n    props.prodsSolicitar.forEach(p => {\n        const strippedCurrency = p.currency?.trim();\n        if (strippedCurrency === \"USD\") {\n            usdList.push(p);\n        }\n        else if (strippedCurrency === \"MXN\") {\n            mxnList.push(p);\n        }\n    });\n\n    return (\n        <React.Fragment>\n            <h5 className=\"title is-5\">Materiales Solicitados ({props.prodsSolicitar.length})</h5>\n            <div className='block'>\n                {\n                    mxnList.length == 0 && usdList.length == 0 &&\n                    <table className=\"table is-striped is-hoverable\">\n                        <thead>\n                            <tr>\n                                <th>Item</th>\n                                <th>Precio</th>\n                                <th>Cantidad</th>\n                                <th>Subtotal</th>\n                            </tr>\n                        </thead>\n                        <tfoot>\n                            <tr>\n                                <th>Total</th>\n                                <th></th>\n                                <th></th>\n                                <th>${0.0.toFixed(2)}</th>\n                            </tr>\n                        </tfoot>\n                    </table>\n                }\n                {\n                    mxnList.length > 0 &&\n                    <table className=\"table is-striped is-hoverable\">\n                        <thead>\n                            <tr>\n                                <th>Item</th>\n                                <th>Precio</th>\n                                <th>Cantidad</th>\n                                <th>Subtotal</th>\n                            </tr>\n                        </thead>\n                        <tfoot>\n                            <tr>\n                                <th>Total</th>\n                                <th></th>\n                                <th></th>\n                                <th>${mxnList.reduce((acc, p) => acc + parseFloat(p.precioT), 0).toFixed(2)} MXN</th>\n                            </tr>\n                        </tfoot>\n                        <tbody>\n                            {mxnList.map(p => {\n                                return (\n                                    <tr key={p.codigo}>\n                                        <td>{p.comentarios}</td>\n                                        <td>${p.precioU} MXN</td>\n                                        <td>{p.cantidad}</td>\n                                        <td>${parseFloat(p.precioT).toFixed(2)} MXN</td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                }\n                {\n                    usdList.length > 0 &&\n                    <table className=\"table is-striped is-hoverable\">\n                        <thead>\n                            <tr>\n                                <th>Item</th>\n                                <th>Precio</th>\n                                <th>Cantidad</th>\n                                <th>Subtotal</th>\n                            </tr>\n                        </thead>\n                        <tfoot>\n                            <tr>\n                                <th>Total</th>\n                                <th></th>\n                                <th></th>\n                                <th>${usdList.reduce((acc, p) => acc + parseFloat(p.precioT), 0).toFixed(2)} USD</th>\n                            </tr>\n                        </tfoot>\n                        <tbody>\n                            {usdList.map(p => {\n                                return (\n                                    <tr key={p.codigo}>\n                                        <td>{p.comentarios}</td>\n                                        <td>${p.precioU} USD</td>\n                                        <td>{p.cantidad}</td>\n                                        <td>${parseFloat(p.precioT).toFixed(2)} USD</td>\n                                    </tr>\n                                );\n                            })}\n                        </tbody>\n                    </table>\n                }\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport { ProductsBill };\n","import { FieldHookConfig, useField } from \"formik\";\nimport * as React from 'react';\nimport { ComponentPropsWithoutRef } from \"react\";\n\ninterface SelectInputProps extends ComponentPropsWithoutRef<\"select\"> {\n    label: string\n}\n\nfunction SelectInput({ label, ...props }: SelectInputProps & FieldHookConfig<string>) {\n    const [field, meta] = useField(props);\n    return (\n        <div className=\"block field\">\n            <label htmlFor={props.id || props.name} className=\"subtitle is-4 has-text-grey\">{label}</label>\n            <br />\n            <div className=\"control is-expanded\">\n                <div className=\"select is-fullwidth is-info is-medium mt-3 mb-3\">\n                    <select {...field} {...props as ComponentPropsWithoutRef<\"select\">} />\n                </div>\n            </div>\n            {meta.touched && meta.error ? (\n                <div className=\"ml-2 mt-1 has-text-danger is-size-7\">{meta.error}</div>\n            ) : null}\n        </div>\n    );\n}\n\nexport { SelectInput };\n","import { FieldHookConfig, useField } from \"formik\";\nimport * as React from 'react';\nimport { ComponentPropsWithoutRef } from \"react\";\n\ninterface TextInputProps extends ComponentPropsWithoutRef<\"input\"> {\n    label: string\n}\n\nfunction TextInput({ label, ...props }: TextInputProps & FieldHookConfig<string>) {\n    const [field, meta] = useField(props);\n    return (\n        <div className=\"block\">\n            <label htmlFor={props.id || props.name} className=\"subtitle is-4 has-text-grey\">{label}</label>\n            <input className=\"input\" {...field} {...props as ComponentPropsWithoutRef<\"input\">} />\n            {meta.touched && meta.error ? (\n                <div className=\"ml-2 mt-1 has-text-danger is-size-7\">{meta.error}</div>\n            ) : null}\n        </div>\n    );\n}\n\nexport { TextInput };\n"],"names":["Button","props","customClassName","className","isLoading","buttonProps","_objectWithoutPropertiesLoose","_excluded","React","children","CellButton","ErrorScreen","FileForm","_useState","useState","filename","setFilename","type","name","onChange","event","files","currentTarget","file","FaUpload","GhostButton","_ref","rest","style","whiteSpace","textAlign","wordBreak","wordWrap","LoadingBar","max","ProductCard","p","width","src","img","alt","objectFit","height","overflow","textOverflow","descripcion","precio","currency","uni_medida","stock","noParte","prodsSolicitar","some","e","id","idProd","href","onClick","addItem","onClickAgregar","undefined","setProdsSolicitar","concat","codigo","cantidad","precioU","precioT","numPedido","folio","comentarios","tipo_equipo","numEconomico","idOdc","index","findIndex","cant","parseInt","_p$prodsSolicitar$ind","filter","f","map","_extends","parseFloat","pattern","value","_p$prodsSolicitar$fin","find","target","onBlur","_p$prodsSolicitar$ind2","ProductsBill","console","log","usdList","mxnList","forEach","strippedCurrency","_p$currency","trim","push","length","toFixed","reduce","acc","key","SelectInput","label","_useField","useField","field","meta","htmlFor","touched","error","TextInput"],"mappings":"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"}